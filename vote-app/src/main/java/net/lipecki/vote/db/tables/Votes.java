/**
 * This class is generated by jOOQ
 */
package net.lipecki.vote.db.tables;


import net.lipecki.vote.db.Keys;
import net.lipecki.vote.db.Public;
import net.lipecki.vote.db.tables.records.VotesRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Votes extends TableImpl<VotesRecord> {

    private static final long serialVersionUID = 1365513072;

    /**
     * The reference instance of <code>PUBLIC.VOTES</code>
     */
    public static final Votes VOTES = new Votes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VotesRecord> getRecordType() {
        return VotesRecord.class;
    }

    /**
     * The column <code>PUBLIC.VOTES.ID</code>.
     */
    public final TableField<VotesRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_F05C0075_5566_4FF6_9FE9_E4176155B857)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.VOTES.TITLE</code>.
     */
    public final TableField<VotesRecord, String> TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.VOTES.TYPE</code>.
     */
    public final TableField<VotesRecord, String> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.VOTES.DETAILS</code>.
     */
    public final TableField<VotesRecord, String> DETAILS = createField("DETAILS", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.VOTES</code> table reference
     */
    public Votes() {
        this("VOTES", null);
    }

    /**
     * Create an aliased <code>PUBLIC.VOTES</code> table reference
     */
    public Votes(String alias) {
        this(alias, VOTES);
    }

    private Votes(String alias, Table<VotesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Votes(String alias, Table<VotesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VotesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VotesRecord> getPrimaryKey() {
        return Keys.PK_VOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VotesRecord>> getKeys() {
        return Arrays.<UniqueKey<VotesRecord>>asList(Keys.PK_VOTES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Votes as(String alias) {
        return new Votes(alias, this);
    }

    /**
     * Rename this table
     */
    public Votes rename(String name) {
        return new Votes(name, null);
    }
}
